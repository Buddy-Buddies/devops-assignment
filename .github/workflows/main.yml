name: Node.js CI/CD Pipeline

on:
  push:
    branches:
    - feature/add-ci

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    # commented for now.
    # - name: Run tests 
    #   run: npm test


    # - name: 'Login to GitHub Container Registry'
    #   uses: docker/login-action@v1
    #   with:
    #     registry: ghcr.io
    #     username: ${{github.actor}}
    #     password: ${{secrets.PAT_TOKEN}}

    # - name: 'Build Docker Image'
    #   run: |
    #     docker build . --tag ghcr.io/<your-GitHub-username>/store:latest
    #     docker push ghcr.io/<your-GitHub-username>/store:latest

    # - name: Build and Publish Docker image
    #   uses: VaultVulp/gp-docker-action@1.6.0
    #   with:
    #     github-token: ${{ secrets.PAT_TOKEN }}
    #     image-name: node
    #     image-tag: latest


    - name: 'Build Docker Image'
      run: |
        IMAGE_TAG="node-${{ github.run_id }}"
        docker build -t twizoff/devops-assignment:${IMAGE_TAG} .
        echo "::set-output name=IMAGE_TAG::${IMAGE_TAG}"

    - name: 'Push Docker Image'
      run: |
        echo ${{ steps.build.outputs.IMAGE_TAG }}
        echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u twizoff --password-stdin
        docker push twizoff/devops-assignment:${{ steps.build.outputs.IMAGE_TAG }}

  cd:
    runs-on: ubuntu-latest

    needs: ci

    steps:
    - name: SSH into the server and deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        script: |
          docker-compose up -d
